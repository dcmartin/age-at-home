- id: auto_light_on_enabled
  alias: auto_light_on_enabled
  trigger:
    platform: state
    entity_id: input_slider.auto_light_minutes, input_slider.auto_light_duration
  action:
  - service: homeassistant.turn_on
    data:
      entity_id:
        - automation.auto_light_on
  - service: homeassistant.turn_on
    data:
      entity_id:
        - automation.auto_light_off

- id: auto_light_on
  alias: auto_light_on
  initial_state: True
  trigger:
    - platform: time
      minutes: '/1'
      seconds: 10
  condition:
    - condition: template
      value_template: '{{ (now().strftime("%s") | int | timestamp_custom("%H:%M")) == states.sensor.auto_light_start.state }}'
  action:
    - service: homeassistant.turn_on
      entity_id: "group.lights"

- id: auto_light_off
  alias: auto_light_off
  initial_state: True
  trigger:
    - platform: time
      minutes: '/1'
      seconds: 10
  condition:
    - condition: template
      value_template: '{{ (now().strftime("%s") | int | timestamp_custom("%H:%M")) == states.sensor.auto_light_stop.state }}'
  action:
    - service: homeassistant.turn_off
      entity_id: "group.lights"

###
### iOS NOTIFICATIONS
###

##
## AGE-AT-HOME
##

# devices offline ('not_home')
- id: aah_notify_devices_offline
  alias: aah_notify_devices_offline
  trigger:
    - platform: state
      entity_id:
        - device_tracker.roughfog
        - device_tracker.dampcloud
        - device_tracker.roughwind
        - device_tracker.quietwater
        - device_tracker.agedbush
    - platform: state
      entity_id:
        - camera.ageathome_kitchen
        - camera.ageathome_bathroom
        - camera.ageathome_frontdoor
        - camera.ageathome_road
        - camera.ageathome_interiorgate
      to: 'not_home'
      for:
        minutes: 10
#  condition:
#    - condition: template
#      value_template: >
#        {{ trigger.to_state.state == 'not_home' }}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'ageathome/status/camera'
        payload: >
          {"device":"{{ trigger.to_state.attributes.friendly_name }}","status":"offline"}
    - service: notify.notify
      data_template:
        title: AGE AT HOME
        message: >
          {{ trigger.to_state.attributes.friendly_name }} is offline.

##
## SYSTEM STATUS OFFLINE
##

- id: notify_status_view
  alias: 'notify_status_view'
  initial_state: on
  trigger:
    - platform: state
      entity_id: group.status_view
  condition:
    - condition: template
      value_template: >
        {{ trigger.to_state.state == 'not_home' }}
  action:
    - service: notify.notify
      data_template:
        title: SYSTEM
        message: >
          {{ trigger.to_state.attributes.friendly_name }} is offline.

##
## PEOPLE STATUS
##

- id: notify_david
  alias: 'notify_david'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id: 
        - group.david_devices
        - sensor.david_status
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ (trigger.from_state != None) and (trigger.to_state.state != trigger.from_state.state) }}
  action:
    # NOTIFY to IOS
    - service: notify.notify
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }} location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}
    # PUBLISH to MQTT
    - service: mqtt.publish
      data_template:
        topic: 'notify/david'
        payload: >
          {
           "entity":{{trigger.entity_id|tojson}},
           "date:",{{(now().timestamp()|int)}},
           "from":{{ trigger.from_state.state|tojson }},
           "to":{{ trigger.to_state.state|tojson }},
           "what":"david",
           "source":{{states(trigger.entity_id)|tojson}},
           "state":{{states('sensor.david_status')|tojson}}
          }

# {% set trigger = { "from_state": { "state": "Not Here", "attributes": {"friendly_name":"David iPhone7"}}, "to_state": { "state": "Home" }, "entity_id": "group.david_devices" } %}
# {% set e = trigger.entity_id %}
# {% set f = closest(e).entity_id %}
# {{ f, states(f) }}

#       {%- set e = closest(states.group.david_devices) -%}
#       {%- if e is defined -%}
#         {%- set d = distance(e) -%}
#         {%- if e.source_type == 'gps' -%}
#           {"device":{{ e.attributes.friendly_name|tojson }},"location":{{e.state|tojson}},"online":{{(e.attributes.device_status == 'online')|tojson}},"feet":{{d*5280.0}}}
#         {%- else -%}
#           {"device":{{ e.attributes.friendly_name|tojson }},"location":"home","online":true,"feet":{{d*5280.0}}}
#         {%- endif -%}
#       {%- endif -%}

# KELI
- id: notify_keli
  alias: 'notify_keli'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: 
      - device_tracker.kelisiphone7
      - device_tracker.kelis_iphone
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ trigger.from_state != None and trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: notify.notify
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }} location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}

# HALI
- id: notify_hali
  alias: 'notify_hali'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: 
      - device_tracker.halimmartinsipad
      - device_tracker.halisiphone
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ trigger.from_state != None and trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: notify.notify
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }} location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}

# IAN
- id: notify_ian
  alias: 'notify_ian'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: 
      - device_tracker.iansiphone5
      - device_tracker.ians_iphone
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ trigger.from_state != None and trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: notify.notify
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }} location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}

# RILEY
- id: notify_riley
  alias: 'notify_riley'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: 
      - device_tracker.rileysiphone5
      - device_tracker.rileys_iphone
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ trigger.from_state != None and trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: notify.notify
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }} location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}

# ELLEN
- id: notify_ellen
  alias: 'notify_ellen'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: 
      - device_tracker.ellensiphone5
      - device_tracker.ellens_iphone
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
      - condition: template
        value_template: >
          {{ trigger.from_state != None and trigger.to_state.state != trigger.from_state.state }}
  action:
    - service: notify.notify
      data_template:
        message: >
          {{ trigger.to_state.attributes.friendly_name }} location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}

#
# MQTT
#


- id: notify_lowscore
  alias: very low score
  trigger:
    platform: numeric_state
    entity_id: sensor.last_why
    below: 0.50
  action:
    - service: mqtt.publish
      data_template:
        topic: 'ageathome/notify/score'
        payload: >
          {"location":{{states('sensor.last_where')|tojson}},"model":{{states('sensor.last_who')|tojson}},"class":{{states('sensor.last_what')|tojson}},"score":{{states('sensor.last_why')}}}

- id: notify_highscore
  alias: very high score
  trigger:
    platform: numeric_state
    entity_id: sensor.last_why
    above: 0.98
  action:
    - service: mqtt.publish
      data_template:
        topic: 'ageathome/notify/score'
        payload: >
          {"location":{{states('sensor.last_where')|tojson}},"model":{{states('sensor.last_who')|tojson}},"class":{{states('sensor.last_what')|tojson}},"score":{{states('sensor.last_why')}}}

###
### INTERIOR GATE
###

- alias: 'Interior Gate Open'
  initial_state: on
  trigger:
    platform: state
    entity_id: cover.interiorgate_opener
    from: 'closed'
    to: 'open'
  action:
    service: script.turn_on
    entity_id: script.gate_door_alarm

- alias: 'Interior Gate Closed'
  initial_state: on
  trigger:
    platform: state
    entity_id: cover.interiorgate_opener
    from: 'open'
    to: 'closed'
  action:
    service: script.turn_off
    entity_id: script.gate_door_alarm

- alias: 'Open Interior Gate'
  initial_state: on
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: OPEN_INTERIORGATE
  action:
    service: cover.open_cover
    entity_id: cover.interiorgate_opener

- alias: 'Close Interior Gate'
  initial_state: on
  trigger:
    platform: event
    event_type: ios.notification_action_fired
    event_data:
      actionName: CLOSE_INTERIORGATE
  action:
    service: cover.close_cover
    entity_id: cover.interiorgate_opener

###
### NOTIFY IF PERSON SEEN IN LOCATION IS NOT HOME or UNKNOWN (DNE)
###

- id: aah_location_not_people
  alias: aah_location_not_people
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'presence/+'
  condition: 
     - condition: template
       # {% set trigger = { "payload_json": { "class": "david", "location": "kitchen" } } %}
       # {{ not ( states(("sensor.",trigger.payload_json.class,"_location")|join|lower) in ("home","unknown") }}
       value_template: >
         {%- for state in states.group.people.attributes.entity_id -%}
           {%- set w = state.replace('sensor.','').replace('_location','')|lower -%}
           {%- if w == trigger.payload_json.class|lower and not states(state)|lower in ('home','unknown') -%} 
            {{ true }}
           {%- endif -%}
         {%- endfor -%}
  action:
    - service: mqtt.publish
      data_template:
        topic: 'wrong/group/people/{{ trigger.payload_json.class }}'
        payload: >-
          {
           "type":"group/people",
           "triggered":{{(now().timestamp()|int)}},
           "device":{{trigger.payload_json.device|tojson}},
           "id":{{trigger.payload_json.id|tojson}},
           "where":{{trigger.payload_json.location|tojson}},
           "who":{{trigger.payload_json.model|tojson}},
           "what":{{trigger.payload_json.class|tojson}},
           "why":{{trigger.payload_json.score|float}},
           "date":{{trigger.payload_json.date|int}}
          }
    - service: notify.notify
      data_template:
        title: NOT HOME
        message: >-
          SAW {{ trigger.payload_json.class }} in {{ trigger.payload_json.location }} 
          AT {{ trigger.payload_json.date|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}
          BUT {{ trigger.payload_json.class }} is {{ states(("sensor.",trigger.payload_json.class,"_location")|join|lower) }}
          [ {{ trigger.payload_json.model }} {{ trigger.payload_json.score|float }} {{ trigger.payload_json.id }} ]
        data:
          attachment:
            url: http://homeassistant.dcmartin.com:8123{{- states(("sensor.camera_",trigger.payload_json.location,"_entity_picture")|join|lower) -}}
            content-type: jpeg
            hide-thumbnail: false

##
## NOTIFY MOTION at INTERIORGATE
##

- id: aah_motion_interiorgate
  alias: aah_motion_interiorgate
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'presence/interiorgate'
  condition: 
    condition: and
    conditions:
      - condition: time
        after: '06:00'
      - condition: time
        before: '22:00'
  action:
    - service: notify.notify
      data_template:
        title: INTERIOR GATE
        message: >-
          SAW {{ trigger.payload_json.class }}
          AT {{ trigger.payload_json.date|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}
          [ {{ trigger.payload_json.model }} {{ trigger.payload_json.score|float }} {{ trigger.payload_json.id }} ]
        data:
          push:
            badge: 0
            sound: "US-EN-Alexa-Motion-Detected-Generic.wav"
            category: camera 
          entity_id: >
            {{ ("camera.ageathome_",trigger.payload_json.location,"")|join|lower }}
          action_data:
            entity_id: >
              {{ ("camera.ageathome_",trigger.payload_json.location,"")|join|lower }}
            my_custom_data: >
              {{ trigger.payload_json.id }}

##
## CAPTURE RESPONSE from IOS NOTIFICATIONS
##

#
# EXAMPLE PAYLOAD FROM IOS NOTIFICATION
#
# {
#  "sourceDeviceName": "Robbie's iPhone 7 Plus",
#  "sourceDeviceID": "robbies_iphone_7_plus",
#  "actionName": "SOUND_ALARM",
#  "sourceDevicePushId": "ab9f02fe-6ac6-47b8-adeb-5dd87b489156",
#  "textInput": "",
#  "actionData": {}
# }
#

- id: aah_correction
  alias: aah_correction
  initial_state: on
  trigger:
    -  platform: event
       event_type: ios.notification_action_fired
       # event_data:
       #   actionName: SOUND_ALARM
  action:
    - service: mqtt.publish
      data_template:
        topic: 'correction/entity'
        payload: >-
          {
           "type":"correction",
           "triggered":{{(now().timestamp()|int)}},
           "payload":{{trigger.payload_json|tojson}},
          }
    - service: notify.notify
      data_template:
        title: RECEIVED
        message: >
          {{ trigger.payload_json.textInput }} {{ trigger.payload_json.actionData }} 

##
## SEND NOTIFICATION FOR MARTIN_C70 on ROAD when DAVID is HOME
##

- id: aah_location_not_road
  alias: aah_location_not_road
  initial_state: on
  trigger:
    - platform: mqtt
      topic: 'presence/road'
  condition: 
     - condition: template
       value_template: '{{ trigger.payload_json.class == "martin_c70" and states("sensor.david_location")|lower == "home" }}'
  action:
    - service: mqtt.publish
      data_template:
        topic: 'wrong/{{ trigger.payload_json.location }}/{{ trigger.payload_json.class }}'
        payload: >-
          {
           "type":"road",
           "triggered":{{(now().timestamp()|int)}},
           "device":{{trigger.payload_json.device|tojson}},
           "id":{{trigger.payload_json.id|tojson}},
           "where":{{trigger.payload_json.location|tojson}},
           "who":{{trigger.payload_json.model|tojson}},
           "what":{{trigger.payload_json.class|tojson}},
           "why":{{trigger.payload_json.score|float}},
           "date":{{trigger.payload_json.date|int}}
          }
    - service: notify.notify
      data_template:
        title: NOTROAD1
        message: >-
          saw {{ trigger.payload_json.class }} ( {{ states(("sensor.",trigger.payload_json.class,"_location")|join|lower) }} )
          in {{ trigger.payload_json.location }} 
          when {{ trigger.payload_json.date|int|timestamp_custom("%a %b %d @ %I:%M %p") | default(null) }}
          by {{ trigger.payload_json.model }} 
          level {{ trigger.payload_json.score|float }}
          image {{ trigger.payload_json.id }} 
        data:
          attachment:
            url: http://homeassistant.dcmartin.com:8123{{- states(("sensor.camera_",trigger.payload_json.location,"_entity_picture")|join|lower) -}}
            content-type: jpeg
            hide-thumbnail: false

###
### SONOS
###

- id: sonos_volume_limiter
  alias: sonos_volume_limiter
  initial_state: 'on'
  trigger:
    - platform: numeric_state
      entity_id: media_player.play1
      value_template: '{{ state.attributes.volume_level }}'
      above: 0.35
  condition:
    - condition: time
      after: '08:00:00'
      before: '20:00:00'
  action:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.play1
        volume_level: 0.34

##
## DUMPS
##

- id: publish_lights
  alias: 'publish_lights'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.light != None }}'
    - platform: state
      entity_id: states.light
  action:
    - service: mqtt.publish
      data_template:
        topic: 'state/light/all'
        payload: >
          {%- for state in states.light -%}
            {%- if loop.first -%}{"category":"light","date":{{ (now().timestamp()|int) }},"items":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","last_triggerd":"{{state.attributes.last_triggered}}"}
          {%- endfor -%}]}

- id: publish_automations
  alias: 'publish_automations'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.automation != None }}'
    - platform: state
      entity_id: states.automation
  action:
    - service: mqtt.publish
      data_template:
        topic: 'state/automation/all'
        payload: >
          {%- for state in states.automation -%}
            {%- if loop.first -%}{"category":"automation","date":{{ (now().timestamp()|int) }},"items":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","last_triggerd":"{{state.attributes.last_triggered}}"}
          {%- endfor -%}]}

- id: publish_binary_sensors
  alias: 'publish_binary_sensors'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.binary_sensor != None }}'
    - platform: state
      entity_id: states.binary_sensor
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/binary_sensor/all'
        payload: >
          {% for state in states.binary_sensor -%}
            {%- if loop.first -%} {"category":"binary_sensor","date":{{ (now().timestamp()|int) }},"items":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":{{state.attributes|length}}}
          {%- endfor -%}]}

- id: publish_cameras
  alias: 'publish_cameras'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.camera != None }}'
    - platform: state
      entity_id: states.camera
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/camera/all'
        payload: >
          {% for state in states.camera -%}
            {%- if loop.first -%}{"category":"camera","date":{{ (now().timestamp()|int) }},"items":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":{{state.attributes|length}}}
          {%- endfor -%}]}

- id: publish_device_trackers
  alias: 'publish_device_trackers'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.device_tracker != None }}'
    - platform: state
      entity_id: states.device_tracker
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/device_tracker/all'
        payload: >
         {% for state in states.device_tracker -%}
           {%- if loop.first -%}{"category":"device_tracker","date":{{ (now().timestamp()|int) }},"items":[
           {%- elif loop.last -%}
             {%- if state.attributes.source_type != None -%}
               {"name":"{{ state.name | lower }}","state":"{{state.state}}","attributes":{{state.attributes|length}}}
             {%- endif -%}
           {%- else -%}
             {%- if state.attributes.source_type != None -%}
               {"name":"{{ state.name | lower }}","state":"{{state.state}}","attributes":{{state.attributes|length}}},
             {%- endif -%}
           {%- endif -%}
          {%- endfor -%}]}

- id: publish_media_players
  alias: 'publish_media_players'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.media_player != None }}'
    - platform: state
      entity_id: states.media_player
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/media_player/all'
        payload: >
          {% for state in states.media_player -%}
            {%- if loop.first -%}{"category":"media_player","date":{{ (now().timestamp()|int) }},"items":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":{{state.attributes|length}}}
          {%- endfor -%}]}

- id: publish_sensors
  alias: 'publish_sensors'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.sensor != None }}'
    - platform: state
      entity_id: states.sensor
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/sensor/all'
        payload: >
         {% for state in states.sensor -%}
           {%- if loop.first -%}{"category":"sensor","date":{{ (now().timestamp()|int) }},"items":[
           {%- elif loop.last -%}
             {"name":"{{ state.name | lower }}","state":{{ state.state|tojson }}}
           {%- else -%}
             {"name":"{{ state.name | lower }}","state":{{ state.state|tojson }}},
           {%- endif -%}
          {%- endfor -%}]}

- id: publish_zones
  alias: 'publish_zones'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.zone != None }}'
    - platform: state
      entity_id: states.zone
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/zone/all'
        payload: >
          {% for state in states.zone -%}
            {%- if loop.first -%} {"category":"zone","date":{{ (now().timestamp()|int) }},"items":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":{"radius":{{state.attributes.radius}},"latitude":{{state.attributes.latitude}},"longitude":{{state.attributes.longitude}} }}
          {%- endfor -%}]}

- id: publish_states
  alias: 'publish_states'
  initial_state: 'on'
  trigger:
    - platform: template
      value_template: '{{ states.state != None }}'
    - platform: state
      entity_id: states.state
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/all'
        payload: >
          {%- for i in states -%}
            {%- if loop.first -%}[{%- elif loop.last -%}]{%- else -%},{%- endif -%}
            {"name":"{{ i.name }}","domain":"{{ i.domain }}"}
          {%- endfor -%}

- id: debug_automation
  alias: debug_automation
  initial_state: on
  trigger:
    - platform: state
      entity_id: states.automation
  action:
    - service: mqtt.publish
      data_template:
        topic: 'debug/{{ trigger.platform }}/{{ trigger.entity_id }}'
        retain: false
        payload: >-
          {%- macro dumpState(statePrefix, stateObj) -%}
            {{statePrefix ~ ": "}} {{- stateObj.state }}{{- "\n" -}}
            {{statePrefix ~ ".entity_id: "}} {{- stateObj.entity_id }}{{- "\n" -}}
            {{statePrefix ~ ".domain: "}} {{- stateObj.domain }}{{- "\n" -}}
            {{statePrefix ~ ".object_id: "}} {{- stateObj.object_id }}{{- "\n" -}}
            {{statePrefix ~ ".name: "}} {{- stateObj.name }}{{- "\n" -}}
            {{statePrefix ~ ".last_updated: "}} {{- stateObj.last_updated }}{{- "\n" -}}
            {{statePrefix ~ ".last_changed: "}} {{- stateObj.last_changed }}{{- "\n" -}}
            {%- for attrib in stateObj.attributes | sort() %}
              {%- if attrib is defined -%}
              {{- statePrefix ~ ".attributes." ~ attrib ~ ": " -}} {{- stateObj.attributes[attrib] -}}
              {{- "\n" -}}
              {%- endif -%}
            {%- endfor -%}
          {%- endmacro -%}
          {% set p = trigger.platform %}
          {{"trigger.platform: "}} {{ p }}{{- "\n" -}}
          {%- if p == "mqtt" -%}
            {{"trigger.topic: "}} {{ trigger.topic }}{{- "\n" -}}
            {{"trigger.payload: "}} {{ trigger.payload }}{{- "\n" -}}
            {{"trigger.payload_json: "}} {{ trigger.payload_json }}{{- "\n" -}}
            {{"trigger.qos: "}} {{ trigger.qos }}{{- "\n" -}}
            {%- endif -%}
            {%- if p == "event" or p == "sun" or p == "zone" -%}
            {{"trigger.event: "}} {{ trigger.event }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "numeric_state" -%}
            {{"trigger.above: "}} {{ trigger.above }}{{- "\n" -}}
            {{"trigger.below: "}} {{trigger.below }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "state" -%}
            {{"trigger.for: "}} {{ trigger.for }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "time" -%}
            {{"trigger.now: "}} {{ trigger.now }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "zone" -%}
            {{"trigger.zone: "}} {{ trigger.zone }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "state" or p == "numeric_state" or p == "template" or p == "zone" -%}
            {{"trigger.entity_id: "}} {{ trigger.entity_id }}{{- "\n" -}}{{- "\n" -}}
            {{"trigger.from_state: "}} {{- "\n" -}}
            -------------------{{- "\n" -}}
            {{ dumpState("trigger.from_state", trigger.from_state) }} {{- "\n" -}}
            trigger.to_state:{{- "\n" -}}
            -----------------{{- "\n" -}}
            {{ dumpState("trigger.to_state", trigger.to_state) }}
          {%- endif -%}
