
#automation sensor_offline:
#  id: 'sensor_offline'
#  alias: 'Notify if any AAH sensor is unknown for 10 minutes'
#  trigger:
#    platform: state
#    entity_id:
#      - sensor.kitchen_what
#      - sensor.bathroom_what
#      - sensor.frontdoor_what
#      - sensor.road_what
#    state: 'unknown'
#    for:
#      minutes: 10
#  action:
#    service: notify.notify
#    data_template:
#      message: >
#          The {{ trigger.to_state.attributes.friendly_name }} is UNKNOWN

# automation:
#  - alias: track_david
#    initial_state: off
#    trigger:
#      - platform: state
#        entity_id: device_tracker.davids_iphone
#        to: 'home'
#    action:
#      - service: mqtt.publish
#        topic: '/presence/david'
#        payload: '{ "what":"david", "where":"home" }'
#       payload_template: '{{ states.device_tracker.davids_iphone.state | default("unknown") }}'
#       data_template:
#         topic: '/dump/{{ trigger.platform }}'
#         retain: false
#         payload: >-
#           {% set p = trigger.platform %}
#           {{"trigger.platform: "}} {{ p }}{{- "\n" -}}
#- id: track_david
#  alias: 'is david home'
#  initial_state: off
#  trigger:
#    - platform: state
#      entity_id: device_tracker.davids_iphone
#      to: 'home'
#  action:
#    - service: mqtt.publish
#      topic: '/presence/david'
#      payload: '{ "what":"david", "where":"home" }'
#      payload_template: '{{ states.device_tracker.davids_iphone.state | default("unknown") }}'
#      data_template:
#        topic: '/dump/{{ trigger.platform }}'
#        retain: false
#        payload: >-
#          {% set p = trigger.platform %}
#          {{"trigger.platform: "}} {{ p }}{{- "\n" -}}

#sonos_volume_limiter:
#  id: sonos_volume_limiter
#  alias: Sonos Volume Limiter
#  initial_state: True
#  hide_entity: False
#  trigger:
#    platform: numeric_state
#    entity_id: media_player.play1
#    value_template: '{{ state.attributes.volume_level }}'
#    above: 0.35
#  condition:
#    - condition: time
#      after: '08:00:00'
#      before: '20:00:00'
#  action:
#    - service: media_player.volume_set
#      data_template:
#        entity_id: media_player.play1
#        volume_level: 0.34
#

#- id: sunset
#  initial_state: off
#  trigger:
#    platform: sun
#    # Possible values: sunset, sunrise
#    event: sunset
#    # Optional time offset. This example is 45 minutes.
#    offset: '-00:45:00'

#lowscore:
#  alias: very low scoring
#  trigger:
#    platform: numeric_state
#    entity_id: sensor.mqttscore
#    below: 0.5
#  action:
#    service: persistent_notification.create
#    data:
#      notification_id: 'NOTIFY1'
#      title: "NUMERIC STATE"
#      message: "Score below 0.5"

#highscore:
#  alias: very high scoring
#  trigger:
#    platform: numeric_state
#    entity_id: sensor.mqttscore
#    above: 0.95
#  action:
#    - service: persistent_notification.create
#      data:
#        notification_id: 'NOTIFY1'
#        title: "NUMERIC STATE"
#        message: "Score above 0.95"
#    - delay: 0:30
#    - service: persistent_notification.dismiss
#      data:
#        notification_id: 'NOTIFY1'

#jsonscore:
#  alias: score from presence JSON payload
#  trigger:
#    platform: numeric_state
#    entity_id: sensor.mqttpresence
#    value_template: '{{ value_json.score }}'
#    above: 0.0
#    below: 1.0
#  action:
#    service: persistent_notification.create
#    data:
#      notification_id: 'NOTIFY1'
#      title: "MQTT"
#      message: "Score processed"

#davidishome:
#  alias: davidishome
#  trigger:
#    platform: zone
#    entity_id: device_tracker.davids_iphone
#    zone: zone.home
#    event: enter
#  condition:
#    platform: time
#    after: '06:00'
#    before: '22:00'
#  action:
#    - service: notify.notify
#      data:
#        message: David coming or going
#    - delay: 0:35
#    - service: notify.notify
#      data:
#        message: David is here or gone

#notify_davids_iphone:
#  alias: notify_davids_iphone
#  trigger:
#    platform: state
#    entity_id: binary_sensor.kitchen_wrong
#    from: 'false'
#    to: 'true'
#  condition:
#    platform: time
#    after: '06:00'
#    before: '22:00'
#  action:
#    service: notify.ios_davids_iphone
#    data:
#      message: "Kitchen Wrong"
#      data:
#        push:
#          badge: 5
#          category: "ALARM"
#        action_data:
#          entity_id: binary_sensor.kitchen_wrong
#          my_custom_data: foo_bar

#isdavidhome:
#  alias: isdavidhome
#  trigger: 
#    platform: template
#    value_template: "{% if is_state('device_tracker.davids_iphone', 'home') %}true{% endif %}"
#  

#dump_state:
#  - alias: Dump State
#    trigger:
#      platform: state
#      entity_id: homeassistant
#    action:
#      - service: mqtt.publish
#        data_template:
#          topic: '/dump/{{ trigger.platform }}'
#          retain: false
#          payload: >-
#            {%- macro dumpState(statePrefix, stateObj) -%}
#              {{statePrefix ~ ": "}} {{- stateObj.state }}{{- "\n" -}}
#              {{statePrefix ~ ".entity_id: "}} {{- stateObj.entity_id }}{{- "\n" -}}
#              {{statePrefix ~ ".domain: "}} {{- stateObj.domain }}{{- "\n" -}}
#              {{statePrefix ~ ".object_id: "}} {{- stateObj.object_id }}{{- "\n" -}}
#              {{statePrefix ~ ".name: "}} {{- stateObj.name }}{{- "\n" -}}
#              {{statePrefix ~ ".last_updated: "}} {{- stateObj.last_updated }}{{- "\n" -}}
#              {{statePrefix ~ ".last_changed: "}} {{- stateObj.last_changed }}{{- "\n" -}}
#              {%- for attrib in stateObj.attributes | sort() %}
#                {%- if attrib is defined -%}
#                {{- statePrefix ~ ".attributes." ~ attrib ~ ": " -}} {{- stateObj.attributes[attrib] -}}
#                {{- "\n" -}}
#                {%- endif -%}
#              {%- endfor -%}
#            {%- endmacro -%}
#
#            {% set p = trigger.platform %}
#            {{"trigger.platform: "}} {{ p }}{{- "\n" -}}
#
#            {%- if p == "mqtt" -%}
#            {{"trigger.topic: "}} {{ trigger.topic }}{{- "\n" -}}
#            {{"trigger.payload: "}} {{ trigger.payload }}{{- "\n" -}}
#            {{"trigger.payload_json: "}} {{ trigger.payload_json }}{{- "\n" -}}
#            {{"trigger.qos: "}} {{ trigger.qos }}{{- "\n" -}}
#            {%- endif -%}
#
#            {%- if p == "event" or p == "sun" or p == "zone" -%}
#            {{"trigger.event: "}} {{ trigger.event }}{{- "\n" -}}
#            {%- endif -%}
#
#            {%- if p == "numeric_state" -%}
#            {{"trigger.above: "}} {{ trigger.above }}{{- "\n" -}}
#            {{"trigger.below: "}} {{trigger.below }}{{- "\n" -}}
#            {%- endif -%}
#
#            {%- if p == "state" -%}
#            {{"trigger.for: "}} {{ trigger.for }}{{- "\n" -}}
#            {%- endif -%}
#
#            {%- if p == "time" -%}
#            {{"trigger.now: "}} {{ trigger.now }}{{- "\n" -}}
#            {%- endif -%}
#
#            {%- if p == "zone" -%}
#            {{"trigger.zone: "}} {{ trigger.zone }}{{- "\n" -}}
#            {%- endif -%}
#
#            {%- if p == "state" or p == "numeric_state" or p == "template" or p == "zone" -%}
#            {{"trigger.entity_id: "}} {{ trigger.entity_id }}{{- "\n" -}}{{- "\n" -}}
#            {{"trigger.from_state: "}} {{- "\n" -}}
#            -------------------{{- "\n" -}}
#            {{ dumpState("trigger.from_state", trigger.from_state) }} {{- "\n" -}}
#            trigger.to_state:{{- "\n" -}}
#            -----------------{{- "\n" -}}
#            {{ dumpState("trigger.to_state", trigger.to_state) }}
#            {%- endif -%}
