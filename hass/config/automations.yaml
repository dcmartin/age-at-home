- id: mqtt_david
  alias: 'mqtt_david'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.davidsiphone7
  action: 
    - service: mqtt.publish
      data:
        topic: 'what/david/#'
        payload_template: >
          {{ trigger.to_state.state }}

- id: notify_davids_iphone
  alias: 'notify_davids_iphone'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.davids_iphone_lan
    to: 'home'
  action:
    - service: notify.notify
      data_template:
        message: >
          {% if trigger.to_state.state != trigger.from_state.state %} 
            David's iPhone is now on the LAN at {{ trigger.to_state.state }}
          {% endif %}

- id: notify_david
  alias: 'notify_david'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.dcmsiphone7
  condition:
    platform: time
    after: '06:00'
    before: '22:00'
  action:
    - service: notify.notify
      data_template:
        message: >
          {% if trigger.from_state != None and trigger.to_state.state != trigger.from_state.state %} 
          David's location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}
          {% endif %}

- id: notify_ellen
  alias: 'notify_ellen'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.ellensiphone5
  condition:
    platform: time
    after: '06:00'
    before: '22:00'
  action:
    - service: notify.notify
      data_template:
        message: >
          {% if trigger.from_state != None and trigger.to_state.state != trigger.from_state.state %} 
          Ellen's location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}
          {% endif %}

- id: notify_keli
  alias: 'notify_keli'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.kelisiphone7
  condition:
    platform: time
    after: '06:00'
    before: '22:00'
  action:
    - service: notify.notify
      data_template:
        message: >
          {% if trigger.from_state != None and trigger.to_state.state != trigger.from_state.state %} 
          Keli's location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}
          {% endif %}

- id: notify_riley
  alias: 'notify_riley'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: device_tracker.rileysiphone5
  condition:
    platform: time
    after: '06:00'
    before: '22:00'
  action:
    - service: notify.notify
      data_template:
        message: >
          {% if trigger.from_state != None and trigger.to_state.state != trigger.from_state.state %} 
          Riley's location just changed from {{ trigger.from_state.state }} to {{ trigger.to_state.state }}
          {% endif %}

- id: aah_mqtt_presence_last
  alias: 'mqtt_presence_last'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: sensor.presence_last
  action:
    - service: mqtt.publish
      data:
        topic: 'what/last'
        payload_template: >
          {{ trigger.to_state.state }}

- id: aah_mqtt_camera_offline
  alias: 'Notify if any AAH sensor is unknown for 10 minutes'
  trigger:
    platform: state
    entity_id:
      - sensor.kitchen_camera
      - sensor.bathroom_camera
      - sensor.frontdoor_camera
      - sensor.road_camera
    state: None
    for:
      minutes: 10
  action:
    - service: mqtt.publish
      data_template:
        topic: 'device/camera/{{trigger.to_state.attributes.friendly_name}}'
        payload: >
          {"device":"{{ trigger.to_state.attributes.friendly_name }}","status":"offline"}

- id: aah_notify_lowscore
  alias: very low score
  trigger:
    platform: numeric_state
    entity_id: sensor.last_why
    below: 0.50
  action:
    - service: notify.notify
      data_template:
        message: >
          VERY LOW {{ states.sensor.last_who }} saw {{ states.sensor.last_what }} {{ states.sensor.last_why }}

- id: aah_notify_highscore
  alias: very high score
  trigger:
    platform: numeric_state
    entity_id: sensor.last_why
    above: 0.99
  action:
    - service: notify.notify
      data_template:
        message: >
          VERY HIGH {{ states.sensor.last_who }} saw {{ states.sensor.last_what }} {{ states.sensor.last_why }}

- id: sonos_volume_limiter
  alias: Sonos Volume Limiter
  initial_state: True
  hide_entity: False
  trigger:
    platform: numeric_state
    entity_id: media_player.play1
    value_template: '{{ state.attributes.volume_level }}'
    above: 0.35
  condition:
    platform: time
    after: '08:00:00'
    before: '20:00:00'
  action:
    - service: media_player.volume_set
      data_template:
        entity_id: media_player.play1
        volume_level: 0.34

- id: dump_automations
  alias: 'dump_automations'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: states.automation
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/automation/all' # topic: '{{ trigger.platform }}/{{ trigger.entity_id.name }}/all'
        payload: >
          {% for state in states.automation -%}
            {%- if loop.first -%}{"automations":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":"{{state.attributes}}"}
          {%- endfor -%}]}

- id: dump_binary_sensors
  alias: 'dump_binary_sensors'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: states.binary_sensor
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/binary_sensor/all'
        payload: >
          {% for state in states.binary_sensor -%}
            {%- if loop.first -%} {"binary_sensors":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":"{{state.attributes}}"}
          {%- endfor -%}]}

- id: dump_cameras
  alias: 'dump_cameras'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: states.camera
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/binary_sensor/all'
        payload: >
          {% for state in states.camera -%}
            {%- if loop.first -%}{"cameras":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":"{{state.attributes}}"}
          {%- endfor -%}]}

- id: dump_device_trackers
  alias: 'dump_device_trackers'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: states.device_tracker
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/binary_sensor/all'
        payload: >
         {% for state in states.device_tracker -%}
           {%- if loop.first -%}{"device_trackers":[
           {%- elif loop.last -%}
             {%- if state.attributes.source_type != None -%}
               {"name":"{{ state.name | lower }}","state":"{{state.state}}","attributes":"{{ state.attributes}}"}
             {%- endif -%}
           {%- else -%}
             {%- if state.attributes.source_type != None -%}
               {"name":"{{ state.name | lower }}","state":"{{state.state}}","attributes":"{{ state.attributes}}"},
             {%- endif -%}
           {%- endif -%}
          {%- endfor -%}]}

- id: mqtt_all_media_players_payload_template
  alias: 'mqtt_all_media_players_payload_template'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: states.all_media_players
  action: 
    - service: mqtt.publish
      data:
        topic: 'state/media_player/all'
        payload_template: >
            {{states.all_media_players.state}}

- id: mqtt_media_players_payload_template_script
  alias: 'mqtt_all_media_players_payload_template_script'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: states.all_media_players
  action: 
    - service: mqtt.publish
      data:
        topic: 'state/media_player/all'
        payload_template: >
          {% for state in states.media_player -%}
            {%- if loop.first -%}{"media_players":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":"{{state.attributes}}"}
          {%- endfor -%}]}

- id: dump_media_players
  alias: 'dump_media_players'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: states.media_player
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/media_player/all'
        payload: >
          {% for state in states.media_player -%}
            {%- if loop.first -%}{"media_players":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":"{{state.attributes}}"}
          {%- endfor -%}]}

- id: dump_sensors
  alias: 'dump_sensors'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: states.sensor
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/sensor/all'
        payload: >
          {% for state in states.sensor -%}
            {%- if loop.first -%} {"sensors":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":"{{state.attributes}}"}
          {%- endfor -%}]}

- id: dump_zones
  alias: 'dump_zones'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: states.zone
  action: 
    - service: mqtt.publish
      data_template:
        topic: 'state/zone/all'
        payload: >
          {% for state in states.zone -%}
            {%- if loop.first -%} {"zones":[
            {%- else -%},
            {%- endif -%} {"name":"{{state.name|lower}}","state":"{{state.state}}","attributes":"{{state.attributes}}"}
          {%- endfor -%}]}

- id: dump_states
  alias: dump_states
  trigger:
    platform: state
    entity_id: states.AllStates
  action:
    - service: mqtt.publish
      data_template:
        topic: '{{ trigger.platform }}/{{ trigger.entity_id }}/all'
        retain: false
        payload: >-
          {%- macro dumpState(statePrefix, stateObj) -%}
            {{statePrefix ~ ": "}} {{- stateObj.state }}{{- "\n" -}}
            {{statePrefix ~ ".entity_id: "}} {{- stateObj.entity_id }}{{- "\n" -}}
            {{statePrefix ~ ".domain: "}} {{- stateObj.domain }}{{- "\n" -}}
            {{statePrefix ~ ".object_id: "}} {{- stateObj.object_id }}{{- "\n" -}}
            {{statePrefix ~ ".name: "}} {{- stateObj.name }}{{- "\n" -}}
            {{statePrefix ~ ".last_updated: "}} {{- stateObj.last_updated }}{{- "\n" -}}
            {{statePrefix ~ ".last_changed: "}} {{- stateObj.last_changed }}{{- "\n" -}}
            {%- for attrib in stateObj.attributes | sort() %}
              {%- if attrib is defined -%}
              {{- statePrefix ~ ".attributes." ~ attrib ~ ": " -}} {{- stateObj.attributes[attrib] -}}
              {{- "\n" -}}
              {%- endif -%}
            {%- endfor -%}
          {%- endmacro -%}
          {% set p = trigger.platform %}
          {{"trigger.platform: "}} {{ p }}{{- "\n" -}}
          {%- if p == "mqtt" -%}
            {{"trigger.topic: "}} {{ trigger.topic }}{{- "\n" -}}
            {{"trigger.payload: "}} {{ trigger.payload }}{{- "\n" -}}
            {{"trigger.payload_json: "}} {{ trigger.payload_json }}{{- "\n" -}}
            {{"trigger.qos: "}} {{ trigger.qos }}{{- "\n" -}}
            {%- endif -%}
            {%- if p == "event" or p == "sun" or p == "zone" -%}
            {{"trigger.event: "}} {{ trigger.event }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "numeric_state" -%}
            {{"trigger.above: "}} {{ trigger.above }}{{- "\n" -}}
            {{"trigger.below: "}} {{trigger.below }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "state" -%}
            {{"trigger.for: "}} {{ trigger.for }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "time" -%}
            {{"trigger.now: "}} {{ trigger.now }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "zone" -%}
            {{"trigger.zone: "}} {{ trigger.zone }}{{- "\n" -}}
          {%- endif -%}
          {%- if p == "state" or p == "numeric_state" or p == "template" or p == "zone" -%}
            {{"trigger.entity_id: "}} {{ trigger.entity_id }}{{- "\n" -}}{{- "\n" -}}
            {{"trigger.from_state: "}} {{- "\n" -}}
            -------------------{{- "\n" -}}
            {{ dumpState("trigger.from_state", trigger.from_state) }} {{- "\n" -}}
            trigger.to_state:{{- "\n" -}}
            -----------------{{- "\n" -}}
            {{ dumpState("trigger.to_state", trigger.to_state) }}
          {%- endif -%}
